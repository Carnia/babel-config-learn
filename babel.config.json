{
  "presets": [
    [
      "@babel/preset-env" // 只有preset-env的话只转换语法，不能扩展新api
    ],
    "@babel/preset-typescript"
  ],
  "plugins": [
    "@babel/proposal-class-properties",
    "@babel/proposal-object-rest-spread",
    "@babel/proposal-optional-chaining",
    "@babel/proposal-nullish-coalescing-operator",
    [
      // 帮助函数都是一样的，如果每个文件都引入同样的帮助文件（比如a和b文件都使用了Promise，则都需要在本文件内生成一个Promise帮助函数），会造成文件不必要的增大
      // 所以有这个插件，让帮助函数统一从 @babel/runtime 引入，减少了文件体积。并且对变量名做了处理，避免了全局污染
      "@babel/plugin-transform-runtime",
      {
        "absoluteRuntime": false,
        // corejs: 2 仅支持全局变量（例如 Promise）和静态属性（例如 Array.from）的帮助函数统一处理，而corejs: 3 还支持实例属性（例如 [].includes）的帮助函数统一处理
        "corejs": 3, // 如果这里声明使用corejs3，则需要安装依赖"@babel/runtime-corejs3"
        "helpers": true,
        "proposal": true,
        "regenerator": true
        // "version": "7.0.0-beta.0"
      }
    ]
  ]
}